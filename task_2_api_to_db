from database import *
from sqlalchemy.orm import Session
from fastapi import FastAPI, Depends, Body
from fastapi.responses import JSONResponse, FileResponse

Base.metadata.create_all(bind=engine)

app = FastAPI()

def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()


@app.get('/tasks/')
def main(id, db: Session = Depends(get_db)):
    task = db.query(Tasks).filter(Tasks.id == id).first()
    if task is None:
        return JSONResponse(status_code=404, content={'message': 'Пользователь не найден'})

    return task


@app.post('/tasks/')
def create_task(data = Body(), db: Session = Depends(get_db)):
    task = Tasks(title=data['title'], completed = data['completed'])
    db.add(task)
    db.commit()
    db.refresh(task)
    return task

@app.delete(f'/tasks/{id}')
def delete_task(id, db: Session = Depends(get_db)):
    task = db.query(Tasks).filter(Tasks.id == id).first()

    if task is None:
        return JSONResponse(status_code=404, content={"message": "Нет такого пользователя"})

    db.delete(task)
    db.commit()

    return task
